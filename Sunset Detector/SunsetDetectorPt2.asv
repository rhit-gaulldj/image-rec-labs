%**************************************************************************
% SunsetDetectorPt2.m
%
%   PROGRAM DESCRIPTION
%   Transfer learning method for Sunset Detector Pt. 2 Project
%
%   Output: 
%
%   Written by Daniel Gaull & Maria D. Beloreshka
%   Date: 01/23/25
%**************************************************************************

% dsTrain = readDatastore('images/train');
% dsValidation = readDatastore('images/validate');
% dsTest = readDatastore('images/test');
% 
% net = imagePretrainedNetwork("googlenet", NumClasses=2);
% %analyzeNetwork(net);
% layerNames = {'loss3-classifier'};
% net = freezeNetwork(net,LayerNamesToIgnore=layerNames);
% 
% options = trainingOptions("adam", ...
%     ValidationData=dsValidation, ...
%     ValidationFrequency=5, ...
%     Plots="training-progress", ...
%     Metrics="accuracy", ...
%     Verbose=true, ...
%     MiniBatchSize=64, ...
%     MaxEpochs=30);
% 
% fprintf('Starting training...\n');
% 
% net = trainnet(dsTrain, net, "crossentropy", options);
% 
% saveToStruct(net, 'net.mat');
load('net.mat');

netStruct = net;
% Recreate the layers (if `netStruct.Layers` contains the layer definitions)
layers = netStruct.Layers;

% Create a layer graph or dlnetwork
lgraph = layerGraph(layers);

% If connections are stored separately in the struct, add them
if isfield(netStruct, 'Connections')
    for i = 1:size(netStruct.Connections, 1)-1
        c1 = netStruct.Connections{i, "Source"};
        c2 = netStruct.Connections{i + 1, "Source"};
        source = c1{1,1};
        dest = c2{1,1};
        if ~ismember({souce, d})
        lgraph = connectLayers(lgraph, c1{1,1}, c2{1,1});
    end
end

analyzeNetwork(lgraph);

% Initialize a dlnetwork from the layer graph
net = dlnetwork(lgraph);

% Optionally, update the parameters (e.g., weights and biases)
if isfield(netStruct, 'Parameters')
    for i = 1:numel(net.Learnables)
        net.Learnables.Value{i} = netStruct.Parameters{i};
    end
end

scores = minibatchpredict(net, dsTest);
labels = scores2label(scores, ['sunset', 'nonsunset']);
labels
